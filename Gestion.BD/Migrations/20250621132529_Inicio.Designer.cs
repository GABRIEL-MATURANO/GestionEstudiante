// <auto-generated />
using System;
using Gestion.BD.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion.BD.Migrations
{
    [DbContext(typeof(MiDbContext))]
    [Migration("20250621132529_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Carreras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NombreC" }, "NombreCarrera_UQ")
                        .IsUnique();

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Estudiantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.HasIndex(new[] { "Legajo" }, "Legajo_UQ")
                        .IsUnique();

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.EstudiantesCarreras", b =>
                {
                    b.Property<int>("EstudiantesID")
                        .HasColumnType("int");

                    b.Property<int>("CarrerasId")
                        .HasColumnType("int");

                    b.HasKey("EstudiantesID", "CarrerasId");

                    b.HasIndex("CarrerasId");

                    b.ToTable("EstudiantesCarreras");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Personas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CorreoElec")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CorreoElec" }, "CorreoElectronico_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "DNI" }, "DNI_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "Telefono" }, "Telefono_UQ")
                        .IsUnique();

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rols");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.HasIndex("RolId");

                    b.HasIndex(new[] { "NombreUsuario" }, "NombreUsuario_UQ")
                        .IsUnique();

                    b.ToTable("TipoPersonas");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Estudiantes", b =>
                {
                    b.HasOne("Gestion.BD.Datos.Entity.Personas", "Personas")
                        .WithOne("Estudiantes")
                        .HasForeignKey("Gestion.BD.Datos.Entity.Estudiantes", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.EstudiantesCarreras", b =>
                {
                    b.HasOne("Gestion.BD.Datos.Entity.Carreras", "Carreras")
                        .WithMany("EstudiantesCarreras")
                        .HasForeignKey("CarrerasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.BD.Datos.Entity.Estudiantes", "Estudiantes")
                        .WithMany("EstudiantesCarreras")
                        .HasForeignKey("EstudiantesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carreras");

                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Usuarios", b =>
                {
                    b.HasOne("Gestion.BD.Datos.Entity.Personas", "Personas")
                        .WithOne("Usuarios")
                        .HasForeignKey("Gestion.BD.Datos.Entity.Usuarios", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion.BD.Datos.Entity.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personas");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Carreras", b =>
                {
                    b.Navigation("EstudiantesCarreras");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Estudiantes", b =>
                {
                    b.Navigation("EstudiantesCarreras");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Personas", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Gestion.BD.Datos.Entity.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
